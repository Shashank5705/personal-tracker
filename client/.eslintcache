[{"E:\\The-Path\\client\\src\\index.js":"1","E:\\The-Path\\client\\src\\reportWebVitals.js":"2","E:\\The-Path\\client\\src\\App.js":"3","E:\\The-Path\\client\\src\\pages\\Quests.js":"4","E:\\The-Path\\client\\src\\pages\\Signup.js":"5","E:\\The-Path\\client\\src\\pages\\Login.js":"6","E:\\The-Path\\client\\src\\pages\\Home.js":"7","E:\\The-Path\\client\\src\\pages\\Stats.js":"8","E:\\The-Path\\client\\src\\components\\Footer\\index.js":"9","E:\\The-Path\\client\\src\\components\\Header\\index.js":"10","E:\\The-Path\\client\\src\\utils\\queries.js":"11","E:\\The-Path\\client\\src\\utils\\mutations.js":"12","E:\\The-Path\\client\\src\\utils\\auth.js":"13","E:\\The-Path\\client\\src\\components\\QuestList\\index.js":"14","E:\\The-Path\\client\\src\\components\\Quest\\index.js":"15"},{"size":517,"mtime":1750868982699,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1750868982703,"results":"18","hashOfConfig":"17"},{"size":1801,"mtime":1750868982695,"results":"19","hashOfConfig":"17"},{"size":1567,"mtime":1750868982701,"results":"20","hashOfConfig":"17"},{"size":3114,"mtime":1750868982701,"results":"21","hashOfConfig":"17"},{"size":2881,"mtime":1750868982700,"results":"22","hashOfConfig":"17"},{"size":1837,"mtime":1750871406950,"results":"23","hashOfConfig":"17"},{"size":3957,"mtime":1750871282817,"results":"24","hashOfConfig":"17"},{"size":834,"mtime":1750870377962,"results":"25","hashOfConfig":"17"},{"size":1378,"mtime":1750870232214,"results":"26","hashOfConfig":"17"},{"size":904,"mtime":1750868982705,"results":"27","hashOfConfig":"17"},{"size":1681,"mtime":1750868982705,"results":"28","hashOfConfig":"17"},{"size":757,"mtime":1750868982704,"results":"29","hashOfConfig":"17"},{"size":798,"mtime":1750868982698,"results":"30","hashOfConfig":"17"},{"size":1485,"mtime":1750868982697,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"6kxf9b",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"E:\\The-Path\\client\\src\\index.js",[],["67","68"],"E:\\The-Path\\client\\src\\reportWebVitals.js",[],"E:\\The-Path\\client\\src\\App.js",["69"],"import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Login from \"./pages/Login\";\r\nimport Quests from \"./pages/Quests\";\r\nimport Stats from \"./pages/Stats\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem(\"id_token\");\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/signup\" element={<Signup />} />\r\n              <Route path=\"/quests\" element={<Quests />} />\r\n              <Route path=\"/stats\" element={<Stats />} />\r\n            </Routes>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\The-Path\\client\\src\\pages\\Quests.js",["70","71","72","73","74"],"import React from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Quest from \"../components/Quest\";\r\nimport { QUERY_QUEST } from \"../utils/queries\";\r\nimport QuestList from \"../components/QuestList\";\r\n// import { Quest } from \"../../../server/models\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst Profile = () => {\r\n  const { profileId } = useParams();\r\n\r\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\r\n  const { loading, data } = useQuery(QUERY_QUEST);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const isLoggedIn = Auth.loggedIn();\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"logged-warning-div\">\r\n        <h4 className=\"logged-warning\">\r\n          You need to be logged in to see your profile page. Use the navigation\r\n          links above to sign up or log in!\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quest-page-wrapper\">\r\n      <h2 className=\"card-header mt-4 quest-page-header\">Daily Quests</h2>\r\n      <div className=\"quest-page-button-wrapper\">\r\n        {/* <Button className=\"quest-page-button\" variant=\"contained\" size=\"small\">\r\n          Generate Today's Quests\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"quest-page-wrapper\">\r\n        <QuestList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\The-Path\\client\\src\\pages\\Signup.js",[],"E:\\The-Path\\client\\src\\pages\\Login.js",[],"E:\\The-Path\\client\\src\\pages\\Home.js",["75"],"E:\\The-Path\\client\\src\\pages\\Stats.js",["76","77","78"],"E:\\The-Path\\client\\src\\components\\Footer\\index.js",[],"E:\\The-Path\\client\\src\\components\\Header\\index.js",[],"E:\\The-Path\\client\\src\\utils\\queries.js",[],"E:\\The-Path\\client\\src\\utils\\mutations.js",[],"E:\\The-Path\\client\\src\\utils\\auth.js",[],"E:\\The-Path\\client\\src\\components\\QuestList\\index.js",["79"],"import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { QUERY_TODAYS_QUESTS } from \"../../utils/queries\";\r\nimport Quest from \"../Quest\";\r\nimport \"./questList.css\";\r\n\r\nexport default function QuestList() {\r\n  const {\r\n    data,\r\n    loading,\r\n    refetch: fetchTodaysQuest,\r\n  } = useQuery(QUERY_TODAYS_QUESTS); // todays quest\r\n\r\n  return (\r\n    <div className=\"quest-list-wrapper\">\r\n      {data?.todaysQuests && (\r\n        <div className=\"quest-list-wrapper\">\r\n          {data.todaysQuests.map((quest) => {\r\n            return (\r\n              <Quest\r\n                key={quest._id}\r\n                fetchTodaysQuest={fetchTodaysQuest}\r\n                quest={quest}\r\n              ></Quest>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","E:\\The-Path\\client\\src\\components\\Quest\\index.js",["80","81"],"import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport \"./quest.css\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { COMPLETE_QUEST } from \"../../utils/mutations\";\r\nimport { QUERY_TODAYS_QUESTS } from \"../../utils/queries\";\r\n\r\n// import { quests } from \"../data\";\r\n// import { QUERY_QUEST } from \"../../utils/queries\";\r\n\r\nfunction Quest({ quest, fetchTodaysQuest }) {\r\n  const [completeQuest, { error }] = useMutation(COMPLETE_QUEST, {\r\n    variables: {\r\n      questId: quest._id,\r\n    },\r\n    refetchQueries: [\r\n      QUERY_TODAYS_QUESTS, // DocumentNode object parsed with gql\r\n      \"todaysQuests\", // Query name\r\n    ],\r\n  });\r\n\r\n  const handleClick = async () => {\r\n    // call the complete quest mutation\r\n    await completeQuest();\r\n    // then call refetch\r\n    //  refetch({ questId: questId });\r\n    fetchTodaysQuest();\r\n  };\r\n\r\n  return (\r\n    <div className=\"quest-component-wrapper\">\r\n      <h3 className=\"quest-component-title\">{quest.name}</h3>\r\n      <div>\r\n        <h5 className=\"quest-component-description\">{quest.description}</h5>\r\n      </div>\r\n      <Button\r\n        className=\"quest-component-button\"\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        sx={{\r\n          bgcolor: \"#4ad66d\",\r\n\r\n          \"&:hover\": {\r\n            bgcolor: \"success.main\",\r\n          },\r\n        }}\r\n        onClick={handleClick}\r\n      >\r\n        Complete Quest\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nexport default Quest;\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":13},{"ruleId":"86","severity":1,"message":"91","line":12,"column":10,"nodeType":"88","messageId":"89","endLine":12,"endColumn":21},{"ruleId":"86","severity":1,"message":"92","line":17,"column":11,"nodeType":"88","messageId":"89","endLine":17,"endColumn":20},{"ruleId":"86","severity":1,"message":"93","line":20,"column":20,"nodeType":"88","messageId":"89","endLine":20,"endColumn":24},{"ruleId":"86","severity":1,"message":"94","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"95","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"96","line":12,"column":10,"nodeType":"88","messageId":"89","endLine":12,"endColumn":13},{"ruleId":"86","severity":1,"message":"97","line":20,"column":9,"nodeType":"88","messageId":"89","endLine":20,"endColumn":14},{"ruleId":"86","severity":1,"message":"98","line":10,"column":5,"nodeType":"88","messageId":"89","endLine":10,"endColumn":12},{"ruleId":"86","severity":1,"message":"99","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"100","line":12,"column":27,"nodeType":"88","messageId":"89","endLine":12,"endColumn":32},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Quest' is defined but never used.","'createTheme' is defined but never used.","'profileId' is assigned a value but never used.","'data' is assigned a value but never used.","'useQuery' is defined but never used.","'useParams' is defined but never used.","'gql' is defined but never used.","'theme' is assigned a value but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]